if(x = FALSE){print("NO action take")}
if(x = FALSE){print("NO action take")}
source('D:/Projects/Scrape functions/driver open.R')
source('D:/Projects/Scrape functions/driver open.R')
source('D:/Projects/Scrape functions/driver open.R')
open_driver <- function(x){
if(x = 1){
verlist <- binman::list_versions("chromedriver") %>% flatten_chr()
version <- system2(command = "wmic",args = 'datafile where name="C:\\\\Program Files (x86)\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe" get Version /value',stdout = TRUE,stderr = TRUE)
version <- str_sub(version[3],start = 9,end = -2)
ver <- max(verlist[version > verlist])
driver <- rsDriver(browser = "chrome", chromever = ver)
print("Driver: redr is ready to use, try redr$open")
}
if(x = 0){print("NO action take")}
}
library(binman)
open_driver <- function(x){
if(x = 1){
verlist <- list_versions("chromedriver") %>% flatten_chr()
version <- system2(command = "wmic",args = 'datafile where name="C:\\\\Program Files (x86)\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe" get Version /value',stdout = TRUE,stderr = TRUE)
version <- str_sub(version[3],start = 9,end = -2)
ver <- max(verlist[version > verlist])
driver <- rsDriver(browser = "chrome", chromever = ver)
print("Driver: redr is ready to use, try redr$open")
}
if(x = 0){print("NO action take")}
}
open_driver <- function(x){
if(x == 1){
verlist <- list_versions("chromedriver") %>% flatten_chr()
version <- system2(command = "wmic",args = 'datafile where name="C:\\\\Program Files (x86)\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe" get Version /value',stdout = TRUE,stderr = TRUE)
version <- str_sub(version[3],start = 9,end = -2)
ver <- max(verlist[version > verlist])
driver <- rsDriver(browser = "chrome", chromever = ver)
print("Driver: redr is ready to use, try redr$open")
}
if(x == 0){print("NO action take")}
}
open_driver <- function(x){
if(x == "yes"){
verlist <- list_versions("chromedriver") %>% flatten_chr()
version <- system2(command = "wmic",args = 'datafile where name="C:\\\\Program Files (x86)\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe" get Version /value',stdout = TRUE,stderr = TRUE)
version <- str_sub(version[3],start = 9,end = -2)
ver <- max(verlist[version > verlist])
driver <- rsDriver(browser = "chrome", chromever = ver)
print("Driver: redr is ready to use, try redr$open")
}
if(x == 'no'){print("NO action take")}
}
open_driver <- function(x){
if(x == "yes"){
verlist <- list_versions("chromedriver") %>% flatten_chr()
version <- system2(command = "wmic",args = 'datafile where name="C:\\\\Program Files (x86)\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe" get Version /value',stdout = TRUE,stderr = TRUE)
version <- str_sub(version[3],start = 9,end = -2)
ver <- max(verlist[version > verlist])
driver <- rsDriver(browser = "chrome", chromever = ver)
print("Driver: redr is ready to use, try redr$open")
}
if(x == 'no'){print("NO action take")}
}
open_driver <- function(x){
if(x == "yes"){
# Check the available chrome version, the default is latest
verlist <- list_versions("chromedriver") %>% flatten_chr()
# check my chrome version. wmic: WMI command-line
version <- system2(command = "wmic",args = 'datafile where name="C:\\\\Program Files (x86)\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe" get Version /value',stdout = TRUE,stderr = TRUE)
version <- str_sub(version[3],start = 9,end = -2)
# select the latest version earlier the current chrome version
ver <- max(verlist[version > verlist])
# driver setting
driver <- rsDriver(browser = "chrome", chromever = ver)
driver$client$close()
print("Driver: redr is ready to use, try redr$open")
}
if(x == 'no'){print("NO action take")}
}
source("D:/Projects/Scrape functions/driver open.R")
open_driver(yes)
open_driver("yes")
source("D:/Projects/Scrape functions/driver open.R")
open_driver("yes")
?flatten_chr
source("D:/Projects/Scrape functions/driver open.R")
open_driver("yes")
# to cleanup the port, by kill the java instance(s) inside Rstudio
# refer: https://github.com/ropensci/RSelenium/issues/228
system("taskkill /im java.exe /f", intern=FALSE, ignore.stdout=FALSE)
# check if ports still open
pingr::ping_port("localhost", 4567)
source("D:/Projects/Scrape functions/driver open.R")
open_driver("yes")
redr$close()
print("Driver: redr is ready to use, sign a value with driver[['client']]")
# to cleanup the port, by kill the java instance(s) inside Rstudio
# refer: https://github.com/ropensci/RSelenium/issues/228
system("taskkill /im java.exe /f", intern=FALSE, ignore.stdout=FALSE)
# check if ports still open
pingr::ping_port("localhost", 4567)
source("D:/Projects/Scrape functions/driver open.R")
open_driver("yes")
redr <- driver[['client']]
# to cleanup the port, by kill the java instance(s) inside Rstudio
# refer: https://github.com/ropensci/RSelenium/issues/228
system("taskkill /im java.exe /f", intern=FALSE, ignore.stdout=FALSE)
# check if ports still open
pingr::ping_port("localhost", 4567)
source("D:/Projects/Scrape functions/driver open.R")
open_driver("yes")
redr$open()
redr$close()
open_driver
source("D:/Projects/Scrape functions/driver kill.R")
driver_kill("yes")
open_driver("yes")
?print0
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(data.table)
filepath <- "D:/Projects/EVE/Eve/"
df_gas <- fread(paste0(filepath,"df_all_31_08.csv"))
View(df_gas)
sum(is.na(df_gas))
is.na(df_gas)
summary(is.na(df_gas)) # No NA
# reg model
model_gas <- df_gas %>%
lm(price_adj ~ year + odo_ad, data = .)
summary(model_gas)
res_gas <- resid(model_gas)
ggplot(aes(x = res_gas))+
geom_histogram()
ggplot(res_gas,aes(x = res_gas))+
geom_histogram()
plot(model_gas)
plot(model_gas)
summary(model_gas)
plot(model_gas,1)
summary(df_gas)
df_gas <- data.table(df_gas)
df_gas[,.N,df_gas]
df_gas[price_adj,.N,df_gas]
df_gas[,.N,price_adj]
df_gas[,.N,price_adj][order(price_adj)]
df_gas <- df_gas[odo_ad < 100000]
filepath <- "D:/Projects/EVE/Eve/"
df_gas <- fread(paste0(filepath,"df_all_31_08.csv"))
dt_gas <- df_gas[odo_ad < 100000]
dt_gas <- df_gas[odo_ad < 300000]
dt_gas <- df_gas[odo_ad < 300000]
# reg model
model_gas <- dt_gas %>%
lm(price_adj ~ year + odo_ad, data = .)
summary(model_gas)
# reg model
model_gas <- dt_gas %>%
lm(price_adj ~ year + odo_ad, data = .)
# reg model
lm_gas <- dt_gas %>%
lm(price_adj ~ year + odo_ad, data = .)
summary(model_gas)
plot(model_gas,1)
df_ev <- fread(paste0(filepath,"df_EV_clean.csv"))
View(df_ev)
plot(model_gas,1)
# reg model
lm_gas <- dt_gas %>%
lm(log(price_adj) ~ year + odo_ad, data = .)
summary(model_gas)
plot(model_gas,1)
?log()
lm_gas <- dt_gas %>%
lm(log(price_adj) ~ year + odo_ad, data = .)
summary(model_gas)
summary(lm_gas)
plot(lm_gas,1)
?e
# reg model
lm_gas <- dt_gas %>%
lm(price_adj ~ year + odo_ad, data = .)
summary(lm_gas)
plot(lm_gas,1)
# reg model
lm_gas <- dt_gas %>%
lm(log(price_adj) ~ year + odo_ad, data = .)
plot(lm_gas,1)
dt_gas[,avg_price = mean(price_adj), year]
dt_gas[,avg_price = mean(price_adj), year]
dt_gas[,.(avg_price = mean(price_adj)), year]
dt_avg <- dt_gas[,.(avg_price = mean(price_adj)), year]
View(dt_avg)
dt_avg
dt_avg <- dt_gas[,.(avg_price = mean(price_adj)), .(year,odo_ad)]
dt_avg
dt_gas %>% cor(year, odo_ad,"pearson")
cor(dt_gas$year, dt_gas$odo_ad,"pearson")
cor(dt_gas$year, dt_gas$odo_ad,method = "pearson")
# reg model
lm_gas <- dt_gas %>%
lm(log(price_adj) ~ odo_ad, data = .)
summary(lm_gas)
res_gas <- resid(lm_gas)
plot(lm_gas,1) # odo and my are significant variables
cor(dt_gas$year, dt_gas$odo_ad,method = "pearson") # high negative correlation odo & my
lm_gas_year <- dt_gas %>%
lm(price_adj ~ year, data = .)
summary(lm_gas_year)
plot(lm_gas_year,1)
lm_gas_year <- dt_gas %>%
lm(log(price_adj) ~ year, data = .)
summary(lm_gas_year)
plot(lm_gas_year,1)
plot(lm_gas,1)
plot(lm_gas_year,1)
# consider endogeneity between year and odo
ht_model1 <- lm(odo_ad ~ year, data = dt_gas)
ht_res <- residuals(ht_mdoel1)
ht_res <- residuals(ht_model1)
ht_model2 <- lm(log(price_adj)~odo_ad+ht_res, data = dt_gas)
summary(ht_model2)
# reg model
lm_gas <- dt_gas %>%
lm(log(price_adj) ~ odo_ad + year, data = .)
summary(lm_gas)
summary(ht_model2)
library(AER)
iv_gas <- ivreg(log(price_adj) ~ odo_ad | year)
iv_gas <- ivreg(log(price_adj) ~ odo_ad | year, data = dt_gas)
summary(iv_gas)
summary(ht_model2)
summary(iv_gas)
plot(ht_model2,1)
summary(lm_gas)
summary(iv_gas)
# reg model
lm_gas <- dt_gas %>%
lm(log(price_adj) ~ odo_ad + year + body_adj + trans_ad + make + model, data = .)
summary(lm_gas)
ht_model2 <- lm(log(price_adj)~odo_ad + ht_res + body_adj + trans_ad + make + model, data = dt_gas)
summary(ht_model2)
iv_gas <- ivreg(log(price_adj) ~ odo_ad + body_adj + trans_ad + make + model| year + body_adj + trans_ad + make + model, data = dt_gas)
ht_model2 <- lm(log(price_adj)~odo_ad + ht_res + body_adj + trans_ad + make, data = dt_gas)
summary(ht_model2)
iv_gas <- ivreg(log(price_adj) ~ odo_ad + body_adj + trans_ad + make| year + body_adj + trans_ad + make, data = dt_gas)
summary(iv_gas)
dt_avg <- dt_gas[,.(avg_price = mean(price_adj)), .(year,odo_ad)]
lm_avg_gas <- lm(avg_price~year)
dt_avg
lm_avg_gas <- lm(avg_price~year, data = dt_avg)
summary(lm_avg_gas)
dt_avg <- dt_gas[,.(avg_price = mean(price_adj)), .(year,odo_ad)]
dt_avg
summary(lm_avg_gas)
df_gas[, year := as.character(year)]
dt_gas <- df_gas[odo_ad < 300000] # odometer less than 300,000 km
dt_gas <- df_gas[odo_ad < 300000] # odometer less than 300,000 km
summary(ht_model2)
# consider endogeneity between year and odo
ht_model1 <- lm(odo_ad ~ year, data = dt_gas)
ht_res <- residuals(ht_model1)
summary(ht_model2)
View(dt_gas)
iv_gas <- ivreg(log(price_adj) ~ odo_ad + body_adj + trans_ad + make | year + body_adj + trans_ad + make, data = dt_gas)
summary(iv_gas)
summary(is.na(df_ev))
summary(df_ev)
dt_ev <- data.table(df_ev)
dt_ev[, my := as.character(my)]
View(dt_ev)
dt_ev[is.na(kw)]
dt_ev <- dt_ev[!is.na(kw)]
summary(is.na(df_ev))
dt_ev[!is.na(kw)]
dt_ev <- dt_ev[!is.na(kw)]
summary(is.na(df_ev))
ummary(is.na(dt_ev))
summary(is.na(dt_ev))
dt_ev <- dt_ev[!is.na()]
dt_ev <- dt_ev[!is.na(price)]
summary(is.na(dt_ev))
cor(dt_ev$kw, dt_ev$range_km, method = "pearson")
ht_ev1 <- dt_ev %>% lm(log(price) ~ odo + my + kw + range_km + body_type + make, data = dt_ev)
ht_ev1 <- dt_ev %>% lm(log(price) ~ odo + my + kw + range_km + body_type + make, data = .)
summary(ht_ev1)
ht_ev2 <- dt_ev %>% lm(kw ~ range_km, data = .)
ht_ev2_res <- residuals(ht_ev2)
ht_ev3 <- dt_ev %>% lm(log(price) ~ odo + my + kw + body_type + make + ht_ev2_res, data = .)
summary(ht_ev3)
iv_ev <- ivreg(log(price) ~ odo + my + kw + body_type + make |
odo + my + range_km + body_type + make, data = dt_ev)
summary(iv_ev)
summary(iv_gas)
iv_ev <- ivreg(log(price) ~ odo + kw + body_type + make |
my + range_km + body_type + make, data = dt_ev)
summary(iv_ev)
iv_ev <- ivreg(log(price) ~ odo + my + kw + body_type + make |
odo + my + range_km + body_type + make, data = dt_ev)
summary(iv_ev)
ht_ev2_odo <- dt_ev %>% lm(odo ~ my, data = .)
ht_ev2_odo_res <- residuals(ht_ev2_odo)
ht_ev3 <- dt_ev %>% lm(log(price) ~ odo + kw + body_type + make + ht_ev2_res + ht_ev2_odo_res, data = .)
summary(ht_ev3) # endogeneity has evidence that ht_ev2_res is 10% significant
ht_ev3 <- dt_ev %>% lm(log(price) ~ odo + my + kw + body_type + make + ht_ev2_res, data = .)
summary(ht_ev3) # endogeneity has evidence that ht_ev2_res is 10% significant
summary(ht_ev2)
summary(ht_ev2_odo)
ht_ev2_odo <- dt_ev %>% lm(odo ~ my + make, data = .)
summary(ht_ev2_odo)
ht_ev2_odo <- dt_ev %>% lm(odo ~ my, data = .)
ht_ev2 <- dt_ev %>% lm(kw ~ range_km + make, data = .)
summary(ht_ev2)
cor(dt_ev$kw, dt_ev$range_km, method = "pearson")
iv_ev1 <- ivreg(log(price) ~ body_type + make | odo + kw | my + range_km, data = dt_ev)
iv_ev1 <- ivreg(log(price) ~ body_type + make | odo + kw | my + range_km, data = dt_ev)
iv_ev1 <- ivreg(log(price) ~ odo + kw + body_type + make |
my + range_km + range_km + body_type + make, data = dt_ev)
summary(iv_ev)
summary(iv_ev1)
summary(ht_ev1)
ht_ev2 <- dt_ev %>% lm(kw ~ range_km + body_type + make, data = .)
summary(ht_ev2)
ht_ev2_odo <- dt_ev %>% lm(odo ~ my + body_type + make, data = .)
summary(ht_ev2_odo)
ht_ev2 <- dt_ev %>% lm(kw ~ range_km + body_type + make, data = .)
summary(ht_ev2)
ht_ev2_odo <- dt_ev %>% lm(odo ~ my + body_type + make, data = .)
summary(ht_ev2_odo)
ht_ev3 <- dt_ev %>% lm(log(price) ~ odo + kw + body_type + make + ht_ev2 + ht_ev2_odo, data = .)
ht_ev2_res <- residuals(ht_ev2)
ht_ev2_odo_res <- residuals(ht_ev2_odo)
ht_ev3 <- dt_ev %>% lm(log(price) ~ odo + kw + body_type + make + ht_ev2_res + ht_ev2_odo_res, data = .)
summary(ht_ev3) # endogeneity has evidence that ht_ev2_res is 10% significant
summary(iv_ev1)
dt_ev[, .(avg_price = mean(price)), .(my,make.model)]
dt_ev[, .(avg_price = mean(price)), .(my,make,model)]
dt_ev[, .(avg_price = mean(price)), .(my,make,model)][order(model)]
iv_ev1 <- ivreg(log(price) ~ odo + kw + body_type + make |
my + range_km + body_type + make, data = dt_ev)
summary(iv_ev1)
iv_ev1 <- ivreg(log(price) ~ odo + kw + body_type + make |
range_km + kw + body_type + make, data = dt_ev)
summary(iv_ev1)
iv_ev1 <- ivreg(log(price) ~ odo + kw + body_type + make |
odo + range_km  + body_type + make, data = dt_ev)
summary(iv_ev1)
iv_ev1 <- ivreg(log(price) ~ odo + kw + body_type + make |
my + range_km  + body_type + make, data = dt_ev)
summary(iv_ev1)
cor(dt_ev$odo, dt_ev$my, method = "pearson")
cor(dt_ev$odo, as.numeric(dt_ev$my), method = "pearson")
cor(dt_ev$kw, dt_ev$range_km, method = "pearson")
summary(ht_ev3) # endogeneity has evidence that ht_ev2_res is 10% significant
iv_gas <- ivreg(log(price_adj) ~ odo_ad + body_adj + make | year + body_adj + make, data = dt_gas)
summary(iv_gas)
summary(iv_ev1)
dt_ev[, .(avg_price = mean(price)), .(my,make,model)][order(model)]
dt_ev[, .(avg_price = mean(price)), .(my,make,model)][order(my)]
dt_ev[, .(avg_price = mean(price)), .(my,make)][order(my)]
dt_ev_NTB <- dt_ev[make %in% c("Nissan","BMW","Tesla")]
iv_ev2 <- ivreg(log(price) ~ odo + kw + body_type + make |
my + range_km + body_type + make, data = dt_ev_NTB)
summary(iv_ev2)
iv_ev2 <- ivreg(log(price) ~ my + kw + body_type + make |
odo + range_km + body_type + make, data = dt_ev_NTB)
iv_ev2 <- ivreg(log(price) ~ my + kw + body_type + make |
my + range_km + body_type + make, data = dt_ev_NTB)
summary(iv_ev2)
iv_ev2 <- ivreg(log(price) ~ odo + kw + body_type + make |
my + range_km + body_type + make, data = dt_ev_NTB)
summary(iv_ev2)
summary(iv_ev1)
dt_ev[, .(avg_odo = mean(odo)), .(my,make)][order(my)]
dt_ev[, .(avg_odo = mean(odo)), .(my)][order(my)]
summary(iv_ev1)
iv_ev2 <- ivreg(log(price) ~ odo + kw + body_type + make |
odo + range_km + body_type + make, data = dt_ev_NTB)
summary(iv_ev2)
iv_ev2 <- ivreg(log(price) ~ odo + my + kw + body_type + make |
odo + my + range_km + body_type + make, data = dt_ev_NTB)
summary(iv_ev2)
iv_ev1 <- ivreg(log(price) ~ odo + my + kw + body_type + make |
odo + my + range_km + body_type + make, data = dt_ev)
summary(iv_ev1)
lm_gas <- lm(log(price_adj) ~ odo_ad + year + body_adj + make, data = dt_gas)
summary(lm_gas)
summary(iv_ev1)
summary(iv_gas)
# reg model
lm_gas <- dt_gas %>%
lm(log(price_adj) ~ odo_ad, data = .)
summary(lm_gas)
summary(iv_gas)
lm_ev <- dt_ev %>% lm(price ~ odo, data = .)
summary(lm_ev)
lm_ev <- dt_ev %>% lm(log(price) ~ odo, data = .)
summary(lm_ev)
plot(lm_gas,1)
plot(lm_ev,1)
plot(iv_ev1,1)
plot(ht_ev3,1)
summary(ht_model2)
plot(ht_model2,1)
plot(ht_ev3,1)
summary(ht_model2)
summary(ht_ev3) # endogeneity has evidence that ht_ev2_res is 10% significant
blogdown::check_content()
# EV
summary(ht_ev3)
plot(ht_model2,1)
View(dt_ev)
library(tidyverse)
library(data.table)
dt_ev[year == 2020]
dt_ev[my == 2020]
dt_ev_2020 <- dt_ev[my == 2020]
iv_ev2 <- ivreg(log(price) ~ odo + my + kw + body_type + make |
odo + my + range_km + body_type + make, data = dt_ev_2020)
library(AER)
iv_ev2 <- ivreg(log(price) ~ odo + my + kw + body_type + make |
odo + my + range_km + body_type + make, data = dt_ev_2020)
iv_ev2 <- ivreg(log(price) ~ odo + my + kw + body_type + make |
odo + my + range_km + body_type + make, data = dt_ev_2020)
ht_ev_2020_1 <- lm(odo ~ my, data = dt_ev_2020)
ht_ev_2020_1 <- lm(odo ~ my, data = dt_ev_2020)
dt_ev_2020
library(tidyverse)
library(data.table)
ht_ev_2020_1 <- lm(odo ~ my, data = dt_ev_2020)
ht_ev_2020_0 <- lm(kw ~ range_km, data = dt_ev_2020)
ht_ev_2020_res <- residuals(ht_ev_2020_0)
ht_ev_2020_1 <- lm(log(price) ~ odo + make + body_type + kw + ht_ev_2020_res, data = dt_ev_2020)
summary(ht_ev_2020_1)
plot(ht_ev_2020_1,1)
iv_ev2 <- ivreg(log(price) ~ my + kw + body_type + make |
odo + range_km + body_type + make, data = dt_ev)
iv_ev2 <- ivreg(log(price) ~ odo + my + kw + body_type + make |
odo + my + range_km + body_type + make, data = dt_ev)
summary(iv_ev2)
iv_ev2_res <- residuals(iv_ev2)
?fitted
iv_ev2_fit <- fitted(iv_ev2)
df_ev2_fit_res <- data.frame(fit = iv_ev2_fit, res = iv_ev2_res)
df_ev2_fit_res %>% ggplot(aes(x = fit, y = res))+
geom_point()
df_ev2_fit_res %>% ggplot(aes(x = fit, y = res))+
geom_point()+
geom_smooth()
summary(ht_model2)
lm_gas <- lm(log(price_adj) ~ odo_ad + year + body_adj + make, data = dt_gas)
summary(lm_gas)
plot(lm_gas,1)
summary(iv_ev2)
summary(ht_ev_2020_1)
dt_ev[, .N,my]
dt_ev_2021 <- dt_ev[my == 2021]
ht_ev_2021_0 <- lm(kw ~ range_km, data = dt_ev_2021)
ht_ev_2021_res <- residuals(ht_ev_2021_0)
ht_ev_2021_1 <- lm(log(price) ~ odo + make + body_type + kw + ht_ev_2021_res, data = dt_ev_2021)
summary(ht_ev_2021_1)
plot(ht_ev_2021_1,1)
summary(ht_ev_2020_1)
summary(ht_ev_2021_1)
summary(ht_ev_2020_1)
summary(ht_ev_2021_1)
dt_ev[, .N,my]
dt_ev_2019 <- dt_ev[my == 2019]
ht_ev_2019_0 <- lm(kw ~ range_km, data = dt_ev_2019)
ht_ev_2019_res <- residuals(ht_ev_2019_0)
ht_ev_2019_1 <- lm(log(price) ~ odo + make + body_type + kw + ht_ev_2019_res, data = dt_ev_2019)
summary(ht_ev_2019_1)
plot(ht_ev_2019_1,1)
summary(ht_ev_2019_1)
?sapply
dt_gas[,.N,year]
seq_year <- seq(2011,2021,1)
seq_year
summary(lm_gas)$coefficients[2,1]
summary(lm_gas)
df_gas_odo_year <- data.frame()
hunt_gas_odo <- for (i in years) {
lm_year <- lm(log(price_adj) ~ odo_ad + body_adj + make, data = dt_gas[year == i])
coeffic_odo <- summary(lm_year)$coefficients[2,1]
df_single_cof <- data.frame(year = i, odo_coef = coeffic_odo)
df_gas_odo_year <<- rbind(df_gas_odo_year,df_single_cof)
}
hunt_gas_odo <- for (i in years) {
lm_year <- lm(log(price_adj) ~ odo_ad + body_adj + make, data = dt_gas[year == i])
coeffic_odo <- summary(lm_year)$coefficients[2,1]
df_single_cof <- data.frame(year = i, odo_coef = coeffic_odo)
df_gas_odo_year <<- rbind(df_gas_odo_year,df_single_cof)
}
View(open_driver)
hunt_gas_odo <- for (years) {
lm_year <- lm(log(price_adj) ~ odo_ad + body_adj + make, data = dt_gas[year == i])
coeffic_odo <- summary(lm_year)$coefficients[2,1]
df_single_cof <- data.frame(year = i, odo_coef = coeffic_odo)
df_gas_odo_year <<- rbind(df_gas_odo_year,df_single_cof)
}
View(driver_kill)
for (i in seq_year) {
lm_year <- lm(log(price_adj) ~ odo_ad + body_adj + make, data = dt_gas[year == i])
coeffic_odo <- summary(lm_year)$coefficients[2,1]
df_single_cof <- data.frame(year = i, odo_coef = coeffic_odo)
df_gas_odo_year <<- rbind(df_gas_odo_year,df_single_cof)
}
df_gas_odo_year
# test sample
lm_gas_2011 <- lm(log(price_adj) ~ odo_ad + body_adj + make, data = dt_gas[year == 2011])
summary(lm_gas_2011)
df_gas_odo_year
summary(lm_gas)
plot(lm_gas_2011,1)
