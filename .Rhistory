# driver setting
driver <- rsDriver(browser = "chrome", chromever = ver)
driver$client$close()
redr <- driver[["client"]]
redr$open()
# redr$close()
df_all_fixed[, state_2 := state]
View(df_all_fixed)
df_all <- df_all_fixed
df_all_fixed[, state_2 := state]
View(df_all_fixed)
# first #### pages
for (i in 1639:1739) {
url_inloop <- links[i]
redr$navigate(url_inloop)
Sys.sleep(1)
source_inloop <- redr$getPageSource()
page_inloop <- xml2::read_html(source_inloop[[1]])
# variables
## title
title_il <- page_inloop %>% html_nodes(".card-body .col .js-encode-search") %>% html_text()
## price
price_il <- page_inloop %>% html_nodes(".price .js-encode-search") %>% html_text()
## odometer
odom_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(1)") %>% html_text()
## body
body_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(2)") %>% html_text()
## trans
trans_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(3)") %>% html_text()
## engine
engine_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(4)") %>% html_text()
## state
state_il <- page_inloop %>% html_nodes(".seller-location") %>% html_text() %>% word(.,1,1)
state_2_il <- page_inloop %>% html_nodes(".franchise-name") %>% html_text() %>% word(.,1,1)
## seller
seller_il <- page %>% html_nodes(".seller-type") %>% html_text() %>% gsub("\\n","",.)
## df
df_12_il <- data.table(title = title_il, price = price_il, odometer = odom_il, body = body_il, trans = trans_il, engline = engine_il, state = state_il, seller = seller_il, state_2 = state_2_il)
## merge
df_all <<- rbind(df_all,df_12_il)
df_12_il <- data.table()
print(i)
}
# first #### pages
for (i in 1639:1739) {
url_inloop <- links[i]
redr$navigate(url_inloop)
Sys.sleep(0.5)
source_inloop <- redr$getPageSource()
page_inloop <- xml2::read_html(source_inloop[[1]])
# variables
## title
title_il <- page_inloop %>% html_nodes(".card-body .col .js-encode-search") %>% html_text()
## price
price_il <- page_inloop %>% html_nodes(".price .js-encode-search") %>% html_text()
## odometer
odom_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(1)") %>% html_text()
## body
body_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(2)") %>% html_text()
## trans
trans_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(3)") %>% html_text()
## engine
engine_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(4)") %>% html_text()
## state
state_il <- page_inloop %>% html_nodes(".seller-location") %>% html_text() %>% word(.,1,1)
state_2_il <- page_inloop %>% html_nodes(".franchise-name") %>% html_text() %>% word(.,1,1)
## seller
seller_il <- page %>% html_nodes(".seller-type") %>% html_text() %>% gsub("\\n","",.)
## df
df_12_il <- data.table(title = title_il, price = price_il, odometer = odom_il, body = body_il, trans = trans_il, engline = engine_il, state = state_il, seller = seller_il, state_2 = state_2_il)
## merge
df_all <<- rbind(df_all,df_12_il)
df_12_il <- data.table()
print(i)
}
source <- redr$getPageSource()
page <- xml2::read_html(source[[1]])
################
# seller
################
test_seller <- page %>% html_nodes(".seller-type") %>% html_text() %>% gsub("\\n","",.)
test_seller
###############
# state
###############
test_state <- page %>% html_nodes(".seller-location") %>% html_text() %>% word(.,1,1) %>% gsub("\\n","",.)
test_state
################
# seller
################
test_seller <- page %>% html_nodes(".seller-type") %>% html_text()
test_seller
###############
# state
###############
test_state <- page %>% html_nodes(".seller-location") %>% html_text() %>% word(.,1,1)
test_state
test_state
df_all <- df_all[1:19582,]
# first #### pages
for (i in 1639:1650) {
url_inloop <- links[i]
redr$navigate(url_inloop)
Sys.sleep(0.5)
source_inloop <- redr$getPageSource()
page_inloop <- xml2::read_html(source_inloop[[1]])
# variables
## title
title_il <- page_inloop %>% html_nodes(".card-body .col .js-encode-search") %>% html_text()
## price
price_il <- page_inloop %>% html_nodes(".price .js-encode-search") %>% html_text()
## odometer
odom_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(1)") %>% html_text()
## body
body_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(2)") %>% html_text()
## trans
trans_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(3)") %>% html_text()
## engine
engine_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(4)") %>% html_text()
## state
state_il <- page_inloop %>% html_nodes(".seller-location") %>% html_text()
state_2_il <- page_inloop %>% html_nodes(".franchise-name") %>% html_text()
## seller
seller_il <- page %>% html_nodes(".seller-type") %>% html_text()
## df
df_12_il <- data.table(title = title_il, price = price_il, odometer = odom_il, body = body_il, trans = trans_il, engline = engine_il, state = state_il, seller = seller_il, state_2 = state_2_il)
## merge
df_all <<- rbind(df_all,df_12_il)
df_12_il <- data.table()
print(i)
}
# first #### pages
for (i in 1650:1700) {
url_inloop <- links[i]
redr$navigate(url_inloop)
Sys.sleep(0.5)
source_inloop <- redr$getPageSource()
page_inloop <- xml2::read_html(source_inloop[[1]])
# variables
## title
title_il <- page_inloop %>% html_nodes(".card-body .col .js-encode-search") %>% html_text()
## price
price_il <- page_inloop %>% html_nodes(".price .js-encode-search") %>% html_text()
## odometer
odom_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(1)") %>% html_text()
## body
body_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(2)") %>% html_text()
## trans
trans_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(3)") %>% html_text()
## engine
engine_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(4)") %>% html_text()
## state
state_il <- page_inloop %>% html_nodes(".seller-location") %>% html_text()
state_2_il <- page_inloop %>% html_nodes(".franchise-name") %>% html_text()
## seller
seller_il <- page %>% html_nodes(".seller-type") %>% html_text()
## df
df_12_il <- data.table(title = title_il, price = price_il, odometer = odom_il, body = body_il, trans = trans_il, engline = engine_il, state = state_il, seller = seller_il, state_2 = state_2_il)
## merge
df_all <<- rbind(df_all,df_12_il)
df_12_il <- data.table()
print(i)
}
# first #### pages
for (i in 1691:1700) {
url_inloop <- links[i]
redr$navigate(url_inloop)
Sys.sleep(1)
source_inloop <- redr$getPageSource()
page_inloop <- xml2::read_html(source_inloop[[1]])
# variables
## title
title_il <- page_inloop %>% html_nodes(".card-body .col .js-encode-search") %>% html_text()
## price
price_il <- page_inloop %>% html_nodes(".price .js-encode-search") %>% html_text()
## odometer
odom_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(1)") %>% html_text()
## body
body_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(2)") %>% html_text()
## trans
trans_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(3)") %>% html_text()
## engine
engine_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(4)") %>% html_text()
## state
state_il <- page_inloop %>% html_nodes(".seller-location") %>% html_text()
state_2_il <- page_inloop %>% html_nodes(".franchise-name") %>% html_text()
## seller
seller_il <- page %>% html_nodes(".seller-type") %>% html_text()
## df
df_12_il <- data.table(title = title_il, price = price_il, odometer = odom_il, body = body_il, trans = trans_il, engline = engine_il, state = state_il, seller = seller_il, state_2 = state_2_il)
## merge
df_all <<- rbind(df_all,df_12_il)
df_12_il <- data.table()
print(i)
}
df_all_fixed <- df_all[1:20350,]
View(df_all_fixed)
# first #### pages
for (i in 1700:2000) {
url_inloop <- links[i]
redr$navigate(url_inloop)
Sys.sleep(1.1)
source_inloop <- redr$getPageSource()
page_inloop <- xml2::read_html(source_inloop[[1]])
# variables
## title
title_il <- page_inloop %>% html_nodes(".card-body .col .js-encode-search") %>% html_text()
## price
price_il <- page_inloop %>% html_nodes(".price .js-encode-search") %>% html_text()
## odometer
odom_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(1)") %>% html_text()
## body
body_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(2)") %>% html_text()
## trans
trans_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(3)") %>% html_text()
## engine
engine_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(4)") %>% html_text()
## state
state_il <- page_inloop %>% html_nodes(".seller-location") %>% html_text()
state_2_il <- page_inloop %>% html_nodes(".franchise-name") %>% html_text()
## seller
seller_il <- page %>% html_nodes(".seller-type") %>% html_text()
## df
df_12_il <- data.table(title = title_il, price = price_il, odometer = odom_il, body = body_il, trans = trans_il, engline = engine_il, state = state_il, seller = seller_il, state_2 = state_2_il)
## merge
df_all <<- rbind(df_all,df_12_il)
df_12_il <- data.table()
print(i)
}
# first #### pages
for (i in 2001:2500) {
url_inloop <- links[i]
redr$navigate(url_inloop)
Sys.sleep(1.1)
source_inloop <- redr$getPageSource()
page_inloop <- xml2::read_html(source_inloop[[1]])
# variables
## title
title_il <- page_inloop %>% html_nodes(".card-body .col .js-encode-search") %>% html_text()
## price
price_il <- page_inloop %>% html_nodes(".price .js-encode-search") %>% html_text()
## odometer
odom_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(1)") %>% html_text()
## body
body_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(2)") %>% html_text()
## trans
trans_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(3)") %>% html_text()
## engine
engine_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(4)") %>% html_text()
## state
state_il <- page_inloop %>% html_nodes(".seller-location") %>% html_text()
state_2_il <- page_inloop %>% html_nodes(".franchise-name") %>% html_text()
## seller
seller_il <- page %>% html_nodes(".seller-type") %>% html_text()
## df
df_12_il <- data.table(title = title_il, price = price_il, odometer = odom_il, body = body_il, trans = trans_il, engline = engine_il, state = state_il, seller = seller_il, state_2 = state_2_il)
## merge
df_all <<- rbind(df_all,df_12_il)
df_12_il <- data.table()
print(i)
}
View(df_all)
# first #### pages
for (i in 2086:2500) {
url_inloop <- links[i]
redr$navigate(url_inloop)
Sys.sleep(1.1)
source_inloop <- redr$getPageSource()
page_inloop <- xml2::read_html(source_inloop[[1]])
# variables
## title
title_il <- page_inloop %>% html_nodes(".card-body .col .js-encode-search") %>% html_text()
## price
price_il <- page_inloop %>% html_nodes(".price .js-encode-search") %>% html_text()
## odometer
odom_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(1)") %>% html_text()
## body
body_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(2)") %>% html_text()
## trans
trans_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(3)") %>% html_text()
## engine
engine_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(4)") %>% html_text()
## state
state_il <- page_inloop %>% html_nodes(".seller-location") %>% html_text()
state_2_il <- page_inloop %>% html_nodes(".franchise-name") %>% html_text()
## seller
seller_il <- page %>% html_nodes(".seller-type") %>% html_text()
## df
df_12_il <- data.table(title = title_il, price = price_il, odometer = odom_il, body = body_il, trans = trans_il, engline = engine_il, state = state_il, seller = seller_il, state_2 = state_2_il)
## merge
df_all <<- rbind(df_all,df_12_il)
df_12_il <- data.table()
print(i)
}
# first #### pages
for (i in 2500:3000) {
url_inloop <- links[i]
redr$navigate(url_inloop)
Sys.sleep(1.1)
source_inloop <- redr$getPageSource()
page_inloop <- xml2::read_html(source_inloop[[1]])
# variables
## title
title_il <- page_inloop %>% html_nodes(".card-body .col .js-encode-search") %>% html_text()
## price
price_il <- page_inloop %>% html_nodes(".price .js-encode-search") %>% html_text()
## odometer
odom_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(1)") %>% html_text()
## body
body_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(2)") %>% html_text()
## trans
trans_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(3)") %>% html_text()
## engine
engine_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(4)") %>% html_text()
## state
state_il <- page_inloop %>% html_nodes(".seller-location") %>% html_text()
state_2_il <- page_inloop %>% html_nodes(".franchise-name") %>% html_text()
## seller
seller_il <- page %>% html_nodes(".seller-type") %>% html_text()
## df
df_12_il <- data.table(title = title_il, price = price_il, odometer = odom_il, body = body_il, trans = trans_il, engline = engine_il, state = state_il, seller = seller_il, state_2 = state_2_il)
## merge
df_all <<- rbind(df_all,df_12_il)
df_12_il <- data.table()
print(i)
}
# first #### pages
for (i in 2500:3000) {
url_inloop <- links[i]
redr$navigate(url_inloop)
Sys.sleep(1.1)
source_inloop <- redr$getPageSource()
page_inloop <- xml2::read_html(source_inloop[[1]])
# variables
## title
title_il <- page_inloop %>% html_nodes(".card-body .col .js-encode-search") %>% html_text()
## price
price_il <- page_inloop %>% html_nodes(".price .js-encode-search") %>% html_text()
## odometer
odom_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(1)") %>% html_text()
## body
body_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(2)") %>% html_text()
## trans
trans_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(3)") %>% html_text()
## engine
engine_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(4)") %>% html_text()
## state
state_il <- page_inloop %>% html_nodes(".seller-location") %>% html_text()
state_2_il <- page_inloop %>% html_nodes(".franchise-name") %>% html_text()
## seller
seller_il <- page %>% html_nodes(".seller-type") %>% html_text()
## df
df_12_il <- data.table(title = title_il, price = price_il, odometer = odom_il, body = body_il, trans = trans_il, engline = engine_il, state = state_il, seller = seller_il, state_2 = state_2_il)
## merge
df_all <<- rbind(df_all,df_12_il)
df_12_il <- data.table()
print(i)
}
# to cleanup the port, by kill the java instance(s) inside Rstudio
# refer: https://github.com/ropensci/RSelenium/issues/228
system("taskkill /im java.exe /f", intern=FALSE, ignore.stdout=FALSE)
# check if ports still open
pingr::ping_port("localhost", 4567)
# Check the available chrome version, the default is latest
verlist <- binman::list_versions("chromedriver") %>% flatten_chr()
# check my chrome version. wmic: WMI command-line
version <- system2(command = "wmic",args = 'datafile where name="C:\\\\Program Files (x86)\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe" get Version /value',stdout = TRUE,stderr = TRUE)
version <- str_sub(version[3],start = 9,end = -2)
# select the latest version earlier the current chrome version
ver <- max(verlist[version > verlist])
# driver setting
driver <- rsDriver(browser = "chrome", chromever = ver)
driver$client$close()
redr <- driver[["client"]]
redr$open()
# redr$close()
# first #### pages
for (i in 3000:3500) {
url_inloop <- links[i]
redr$navigate(url_inloop)
Sys.sleep(1.1)
source_inloop <- redr$getPageSource()
page_inloop <- xml2::read_html(source_inloop[[1]])
# variables
## title
title_il <- page_inloop %>% html_nodes(".card-body .col .js-encode-search") %>% html_text()
## price
price_il <- page_inloop %>% html_nodes(".price .js-encode-search") %>% html_text()
## odometer
odom_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(1)") %>% html_text()
## body
body_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(2)") %>% html_text()
## trans
trans_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(3)") %>% html_text()
## engine
engine_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(4)") %>% html_text()
## state
state_il <- page_inloop %>% html_nodes(".seller-location") %>% html_text()
state_2_il <- page_inloop %>% html_nodes(".franchise-name") %>% html_text()
## seller
seller_il <- page %>% html_nodes(".seller-type") %>% html_text()
## df
df_12_il <- data.table(title = title_il, price = price_il, odometer = odom_il, body = body_il, trans = trans_il, engline = engine_il, state = state_il, seller = seller_il, state_2 = state_2_il)
## merge
df_all <<- rbind(df_all,df_12_il)
df_12_il <- data.table()
print(i)
}
# first #### pages
for (i in 3000:3500) {
url_inloop <- links[i]
redr$navigate(url_inloop)
Sys.sleep(1.1)
source_inloop <- redr$getPageSource()
page_inloop <- xml2::read_html(source_inloop[[1]])
# variables
## title
title_il <- page_inloop %>% html_nodes(".card-body .col .js-encode-search") %>% html_text()
## price
price_il <- page_inloop %>% html_nodes(".price .js-encode-search") %>% html_text()
## odometer
odom_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(1)") %>% html_text()
## body
body_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(2)") %>% html_text()
## trans
trans_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(3)") %>% html_text()
## engine
engine_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(4)") %>% html_text()
## state
state_il <- page_inloop %>% html_nodes(".seller-location") %>% html_text()
state_2_il <- page_inloop %>% html_nodes(".franchise-name") %>% html_text()
## seller
seller_il <- page %>% html_nodes(".seller-type") %>% html_text()
## df
df_12_il <- data.table(title = title_il, price = price_il, odometer = odom_il, body = body_il, trans = trans_il, engline = engine_il, state = state_il, seller = seller_il, state_2 = state_2_il)
## merge
df_all <<- rbind(df_all,df_12_il)
df_12_il <- data.table()
print(i)
}
# first #### pages
for (i in 3030:3500) {
url_inloop <- links[i]
redr$navigate(url_inloop)
Sys.sleep(1.1)
source_inloop <- redr$getPageSource()
page_inloop <- xml2::read_html(source_inloop[[1]])
# variables
## title
title_il <- page_inloop %>% html_nodes(".card-body .col .js-encode-search") %>% html_text()
## price
price_il <- page_inloop %>% html_nodes(".price .js-encode-search") %>% html_text()
## odometer
odom_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(1)") %>% html_text()
## body
body_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(2)") %>% html_text()
## trans
trans_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(3)") %>% html_text()
## engine
engine_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(4)") %>% html_text()
## state
state_il <- page_inloop %>% html_nodes(".seller-location") %>% html_text()
state_2_il <- page_inloop %>% html_nodes(".franchise-name") %>% html_text()
## seller
seller_il <- page %>% html_nodes(".seller-type") %>% html_text()
## df
df_12_il <- data.table(title = title_il, price = price_il, odometer = odom_il, body = body_il, trans = trans_il, engline = engine_il, state = state_il, seller = seller_il, state_2 = state_2_il)
## merge
df_all <<- rbind(df_all,df_12_il)
df_12_il <- data.table()
print(i)
}
# first #### pages
for (i in 3500:4000) {
url_inloop <- links[i]
redr$navigate(url_inloop)
Sys.sleep(1.1)
source_inloop <- redr$getPageSource()
page_inloop <- xml2::read_html(source_inloop[[1]])
# variables
## title
title_il <- page_inloop %>% html_nodes(".card-body .col .js-encode-search") %>% html_text()
## price
price_il <- page_inloop %>% html_nodes(".price .js-encode-search") %>% html_text()
## odometer
odom_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(1)") %>% html_text()
## body
body_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(2)") %>% html_text()
## trans
trans_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(3)") %>% html_text()
## engine
engine_il <- page_inloop %>% html_nodes(".key-details__value:nth-child(4)") %>% html_text()
## state
state_il <- page_inloop %>% html_nodes(".seller-location") %>% html_text()
state_2_il <- page_inloop %>% html_nodes(".franchise-name") %>% html_text()
## seller
seller_il <- page %>% html_nodes(".seller-type") %>% html_text()
## df
df_12_il <- data.table(title = title_il, price = price_il, odometer = odom_il, body = body_il, trans = trans_il, engline = engine_il, state = state_il, seller = seller_il, state_2 = state_2_il)
## merge
df_all <<- rbind(df_all,df_12_il)
df_12_il <- data.table()
print(i)
}
df_all_fixed <- df_all[1:47998,]
fwrite(df_all_fixed, "D:/Projects/EVE/data_collect_raw_08_29_2021.csv")
# to cleanup the port, by kill the java instance(s) inside Rstudio
# refer: https://github.com/ropensci/RSelenium/issues/228
system("taskkill /im java.exe /f", intern=FALSE, ignore.stdout=FALSE)
# check if ports still open
pingr::ping_port("localhost", 4567)
redr$close()
