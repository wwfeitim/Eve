df_ev[!is.na(kw) & !is.na(range_km)] %>%
ggplot(aes(x=range_km, y=kw, color = make))+
geom_point()+
theme(axis.text.x = element_text(angle = 0, vjust = 0.5))+
geom_line(aes(x=range_km, y=100, group =1))+
geom_line(aes(x=range_km, y=200, group =1))+
geom_line(aes(x=range_km, y=300, group =1))+
labs(x="Travel Range (KM)",y="Battery KW", color = "Makes", title = "Battery Power (KW) by Makes")
df_ev[!is.na(kw) & !is.na(range_km)] %>%
ggplot(aes(x=range_km, y=kw, color = make))+
geom_point()+
theme(axis.text.x = element_text(angle = 0, vjust = 0.5))+
geom_line(aes(x=range_km, y=100, group =1))+
geom_line(aes(x=range_km, y=200, group =1))+
geom_line(aes(x=range_km, y=300, group =1))+
labs(x="Travel Range (KM)",y="Battery (KW)", color = "Makes", title = "Battery Power (KW) by Makes")
library(ggpubr)
gg_point_KW_KM <- df_ev[!is.na(kw) & !is.na(range_km)] %>%
ggplot(aes(x=range_km, y=kw, color = make))+
geom_point()+
theme(axis.text.x = element_text(angle = 0, vjust = 0.5))+
geom_line(aes(x=range_km, y=100, group =1))+
geom_line(aes(x=range_km, y=200, group =1))+
geom_line(aes(x=range_km, y=300, group =1))+
labs(x="Travel Range (KM)",y="Battery (KW)", color = "Makes", title = "Battery Power (KW) by Makes")
ggarrange(gg_point_kw, gg_point_KW_KM,
ncol = 2)
ggarrange(gg_point_kw, gg_point_KW_KM,
ncol = 1)
df_ev[!is.na(price) & !is.na(range_km)]
df_ev[!is.na(price) & !is.na(range_km)] %>%
ggplot(aes(x=price, y=range_km, color = make))+
geom_point()+
theme(axis.text.x = element_text(angle = 0, vjust = 0.5))+
geom_line(aes(x=50000, y=range_km, group =1))+
geom_line(aes(x=100000, y=range_km, group =1))+
geom_line(aes(x=150000, y=range_km, group =1))+
labs(x="Travel Range (KM)",y="Battery (KW)", color = "Makes", title = "Battery Power (KW) by Makes")
df_ev[!is.na(price) & !is.na(range_km)] %>%
ggplot(aes(x=price, y=range_km, color = make))+
geom_point()+
theme(axis.text.x = element_text(angle = 0, vjust = 0.5))+
geom_line(aes(x=50000, y=range_km, group =1))+
geom_line(aes(x=100000, y=range_km, group =1))+
geom_line(aes(x=150000, y=range_km, group =1))+
labs(x="price",y="range_km", color = "Makes", title = "Battery Power (KW) by Makes")
df_ev[!is.na(price) & !is.na(range_km)] %>%
ggplot(aes(x=price, y=range_km, color = make))+
geom_point()+
geom_smooth()
df_ev[!is.na(price) & !is.na(range_km)] %>%
ggplot(aes(x=price, y=range_km, color = make))+
geom_point()+
geom_smooth()+
theme(axis.text.x = element_text(angle = 0, vjust = 0.5))+
geom_line(aes(x=50000, y=range_km, group =1))+
geom_line(aes(x=100000, y=range_km, group =1))+
geom_line(aes(x=150000, y=range_km, group =1))+
labs(x="price",y="range_km", color = "Makes", title = "Battery Power (KW) by Makes")
df_ev[!is.na(price) & !is.na(range_km)] %>%
ggplot(aes(x=price, y=range_km, color = make))+
geom_point()+
theme(axis.text.x = element_text(angle = 0, vjust = 0.5))+
geom_line(aes(x=50000, y=range_km, group =1))+
geom_line(aes(x=100000, y=range_km, group =1))+
geom_line(aes(x=150000, y=range_km, group =1))+
labs(x="price",y="range_km", color = "Makes", title = "Battery Power (KW) by Makes")
df_ev[!is.na(price) & !is.na(range_km)] %>%
ggplot(aes(x=range_km, y=price, color = make))+
geom_point()+
theme(axis.text.x = element_text(angle = 0, vjust = 0.5))+
geom_line(aes(y=50000, x=range_km, group =1))+
geom_line(aes(y=100000, x=range_km, group =1))+
geom_line(aes(y=150000, x=range_km, group =1))+
labs(x="price",y="range_km", color = "Makes", title = "Battery Power (KW) by Makes")
df_ev[!is.na(price) & !is.na(range_km)] %>%
ggplot(aes(x=range_km, y=price, color = make))+
geom_point()+
theme(axis.text.x = element_text(angle = 0, vjust = 0.5))+
geom_line(aes(y=50000, x=range_km, group =1))+
geom_line(aes(y=100000, x=range_km, group =1))+
geom_line(aes(y=150000, x=range_km, group =1))+
labs(x="Travel Range (KM)",y="Price", color = "Makes", title = "Battery Power (KW) by Makes")
gg_point_KW_KM <- df_ev[!is.na(kw) & !is.na(range_km)] %>%
ggplot(aes(x=range_km, y=kw, color = make))+
geom_point()+
theme(axis.text.x = element_text(angle = 0, vjust = 0.5))+
geom_line(aes(x=range_km, y=100, group =1))+
geom_line(aes(x=range_km, y=200, group =1))+
geom_line(aes(x=range_km, y=300, group =1))+
labs(x="Travel Range (KM)",y="Battery (KW)", color = "Makes", title = "Battery Power(KW) & Travel Range by Makes")
df_ev[!is.na(price) & !is.na(range_km)] %>%
ggplot(aes(x=range_km, y=price, color = make))+
geom_point()+
theme(axis.text.x = element_text(angle = 0, vjust = 0.5))+
geom_line(aes(y=50000, x=range_km, group =1))+
geom_line(aes(y=100000, x=range_km, group =1))+
geom_line(aes(y=150000, x=range_km, group =1))+
labs(x="Travel Range (KM)",y="Price", color = "Makes", title = "Battery Power (KW) by Makes")+
scale_y_continuous(labels = comma)
df_ev[!is.na(price) & !is.na(range_km)] %>%
ggplot(aes(x=range_km, y=price, color = make))+
geom_point()+
theme(axis.text.x = element_text(angle = 0, vjust = 0.5))+
geom_line(aes(y=50000, x=range_km, group =1))+
geom_line(aes(y=100000, x=range_km, group =1))+
geom_line(aes(y=150000, x=range_km, group =1))+
geom_line(aes(x=400, y =price))+
labs(x="Travel Range (KM)",y="Price (AUD)", color = "Makes", title = "Battery Power (KW) by Makes")+
scale_y_continuous(labels = comma)
df_ev[!is.na(price) & !is.na(range_km)] %>%
ggplot(aes(x=range_km, y=price, color = make))+
geom_point()+
theme(axis.text.x = element_text(angle = 0, vjust = 0.5))+
geom_line(aes(y=50000, x=range_km, group =1))+
geom_line(aes(y=100000, x=range_km, group =1))+
geom_line(aes(y=150000, x=range_km, group =1))+
geom_line(aes(x=400, y =price))+
labs(x="Travel Range (KM)",y="Price (AUD)", color = "Makes", title = "Battery Power (KW) by Makes")+
scale_y_continuous(labels = comma, breaks = seq(0, 400000, 50000))
gg_point_range_price <- df_ev[!is.na(price) & !is.na(range_km)] %>%
ggplot(aes(x=range_km, y=price, color = make))+
geom_point()+
theme(axis.text.x = element_text(angle = 0, vjust = 0.5))+
geom_line(aes(y=50000, x=range_km, group =1))+
geom_line(aes(y=100000, x=range_km, group =1))+
geom_line(aes(y=150000, x=range_km, group =1))+
geom_line(aes(x=400, y =price))+
labs(x="Travel Range (KM)",y="Price (AUD)", color = "Makes", title = "Battery Power (KW) by Makes")+
scale_y_continuous(labels = comma, breaks = seq(0, 400000, 50000))
ggarrange(gg_point_kw, gg_point_KW_KM,gg_point_range_price,
ncol = 1)
gg_point_kw
gg_point_KW_KM
## add
model1 <- df_ev %>% lm(range_km ~ kw)
## add
model1 <- df_ev %>% lm(range_km ~ kw)
## add
model1 <- df_ev %>% lm(range_km ~ kw, data = .)
model1
summary(model1)
gg_point_range_price
###
gg_point_range_price <- df_ev[!is.na(price) & !is.na(range_km)] %>%
ggplot(aes(x=range_km, y=price, color = make))+
geom_point()+
theme(axis.text.x = element_text(angle = 0, vjust = 0.5))+
geom_line(aes(y=50000, x=range_km, group =1))+
geom_line(aes(y=100000, x=range_km, group =1))+
geom_line(aes(y=150000, x=range_km, group =1))+
geom_line(aes(x=400, y =price))+
labs(x="Travel Range (KM)",y="Price (AUD)", color = "Makes", title = "Battery (KW)&Price by Makes")+
scale_y_continuous(labels = comma, breaks = seq(0, 400000, 50000))
gg_point_range_price
###
gg_point_range_price <- df_ev[!is.na(price) & !is.na(range_km)] %>%
ggplot(aes(x=range_km, y=price, color = make))+
geom_point()+
theme(axis.text.x = element_text(angle = 0, vjust = 0.5))+
geom_line(aes(y=50000, x=range_km, group =1))+
geom_line(aes(y=100000, x=range_km, group =1))+
geom_line(aes(y=150000, x=range_km, group =1))+
geom_line(aes(x=400, y =price))+
labs(x="Travel Range (KM)",y="Price (AUD)", color = "Makes", title = "Battery (KW) & Price by Makes")+
scale_y_continuous(labels = comma, breaks = seq(0, 400000, 50000))
gg_point_range_price
##
model2 <- df_ev %>% lm(price ~ range_km, data = .)
summary(model2)
##
model2 <- df_ev %>% lm(price ~ make + range_km, data = .)
summary(model2)
##
model2 <- df_ev %>% lm(price ~ make + range_km + my + odo, data = .)
summary(model2)
summary(model2)
###
gg_point_range_price <- df_ev[!is.na(price) & !is.na(range_km)] %>%
ggplot(aes(x=range_km, y=price, color = make))+
geom_point_interactive(aes(tooltip = make, data_id=make))+
theme(axis.text.x = element_text(angle = 0, vjust = 0.5))+
geom_line(aes(y=50000, x=range_km, group =1))+
geom_line(aes(y=100000, x=range_km, group =1))+
geom_line(aes(y=150000, x=range_km, group =1))+
geom_line(aes(x=400, y =price))+
labs(x="Travel Range (KM)",y="Price (AUD)", color = "Makes", title = "Battery (KW) & Price by Makes")+
scale_y_continuous(labels = comma, breaks = seq(0, 400000, 50000))
ggiraph(ggobj = gg_point_range_price)
summary(model2)
df_ev[make == "Jaguar"]
df_ev[make == "Jaguar"]
df_ev[,.N,make]
df_ev[make == "Jaguar"]
?str_detect
df_ev[, range_km := ifelse(str_detect(make, "Jaguar"), 446, range_km)]
df_ev[make == "Jaguar"]
# Makes
## Price
tab_make_meanprice <- df_ev[!is.na(price), .(mean_price = round(mean(price), 2)), make][
order(mean_price)
]
tab_make_medprice <- df_ev[!is.na(price), .(med_price = round(median(price), 2)), make][
order(med_price)
]
# use reorder to sort
gg_make_meanprice <- tab_make_meanprice %>%
ggplot(aes(x = reorder(make, mean_price), y = mean_price, fill = make))+
geom_col_interactive(aes(tooltip = mean_price, data_id=mean_price))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))+
scale_y_continuous(labels = comma, breaks = seq(0,300000,25000))+
labs(x ="Makes", y = "Mean Price", fill = "Makes", title = "Mean Price by Makes")+
geom_line(aes(x = make, y = 50000, group = 1))+
geom_line(aes(x = make, y = 100000, group = 1))
gg_make_medprice <- tab_make_medprice %>%
ggplot(aes(x = reorder(make, med_price), y = med_price, fill = make))+
geom_col_interactive(aes(tooltip = med_price, data_id=med_price))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))+
scale_y_continuous(labels = comma, breaks = seq(0,300000,25000))+
labs(x ="Makes", y = "Median Price", fill = "Makes", title = "Median Price by Makes")+
geom_line(aes(x = make, y = 50000, group = 1))+
geom_line(aes(x = make, y = 100000, group = 1))
ggiraph(ggobj = gg_make_meanprice)
ggiraph(ggobj = gg_make_medprice)
gg_box_make_price <- df_ev %>%
ggplot(aes(x = reorder(make, price), y = price, fill = make))+
geom_boxplot()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))+
scale_y_continuous(labels = comma, breaks = seq(0,400000,25000))+
geom_line(aes(x = make, y = 50000, group = 1))+
geom_line(aes(x = make, y = 100000, group = 1))+
geom_line(aes(x = make, y = 150000, group = 1))+
labs(x ="Makes", y = "Price", fill = "Makes", title = "Price by Makes")
gg_box_make_price
df_ev[, .N, .(make, kw)]
unique(df_ev$kw)
gg_point_kw <- df_ev[!is.na(kw)] %>%
ggplot(aes(x=make, y=kw, color = make))+
geom_point()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))+
geom_line(aes(x=make, y=100, group =1))+
geom_line(aes(x=make, y=200, group =1))+
geom_line(aes(x=make, y=300, group =1))+
labs(x="Makes",y="Battery KW", color = "Makes", title = "Battery Power (KW) by Makes")
gg_point_KW_KM <- df_ev[!is.na(kw) & !is.na(range_km)] %>%
ggplot(aes(x=range_km, y=kw, color = make))+
geom_point()+
theme(axis.text.x = element_text(angle = 0, vjust = 0.5))+
geom_line(aes(x=range_km, y=100, group =1))+
geom_line(aes(x=range_km, y=200, group =1))+
geom_line(aes(x=range_km, y=300, group =1))+
labs(x="Travel Range (KM)",y="Battery (KW)", color = "Makes", title = "Battery Power(KW) & Travel Range by Makes")
## add
model1 <- df_ev %>% lm(range_km ~ kw, data = .)
summary(model1)
###
gg_point_range_price <- df_ev[!is.na(price) & !is.na(range_km)] %>%
ggplot(aes(x=range_km, y=price, color = make))+
geom_point_interactive(aes(tooltip = make, data_id=make))+
theme(axis.text.x = element_text(angle = 0, vjust = 0.5))+
geom_line(aes(y=50000, x=range_km, group =1))+
geom_line(aes(y=100000, x=range_km, group =1))+
geom_line(aes(y=150000, x=range_km, group =1))+
geom_line(aes(x=400, y =price))+
labs(x="Travel Range (KM)",y="Price (AUD)", color = "Makes", title = "Battery (KW) & Price by Makes")+
scale_y_continuous(labels = comma, breaks = seq(0, 400000, 50000))
##
model2 <- df_ev %>% lm(price ~ make + range_km + my + odo, data = .)
summary(model2)
df_ev[make == "Jaguar"]
## add
model1 <- df_ev %>% lm(range_km ~ kw, data = .)
summary(model1)
gg_point_kw
gg_point_KW_KM
ggiraph(ggobj = gg_point_range_price)
summary(model2)
##
model2 <- df_ev %>% lm(price ~ make + range_km + as.factor(my) + odo, data = .)
summary(model2)
df_ev[, my := as.factor(my)]
##
model2 <- df_ev %>% lm(price ~ make + range_km + my + odo, data = .)
summary(model2)
df_ev[, .(mean_price = mean(price)), .(make, body_type)]
df_ev[!is.na(price), .(mean_price = mean(price)), .(make, body_type)]
df_ev[!is.na(price)&!is.na(body_type), .(mean_price = mean(price)), .(make, body_type)]
df_ev[!is.na(price)& !is.na(body_type), .(mean_price = mean(price)), .(make, body_type)]
df_ev[body_type == ""]
df_ev[!is.na(price)& !body_type == "", .(mean_price = mean(price)), .(make, body_type)]
df_ev[!is.na(price)& !body_type == "", .(mean_price = mean(price)), .(make, body_type)] %>%
ggplot(aes(x=make, y=mean_price, fill = body_type))+
geom_col_interactive()
df_ev[!is.na(price)& !body_type == "", .(mean_price = mean(price)), .(make, body_type)] %>%
ggplot(aes(x=make, y=mean_price, fill = body_type))+
geom_col_interactive(aes(tooltip = mean_price, data_id = mean_price))+
theme(axis.text.x = element_text(angle = 0, vjust = 0.5))
df_ev[!is.na(price)& !body_type == "", .(mean_price = mean(price)), .(make, body_type)] %>%
ggplot(aes(x=make, y=mean_price, fill = body_type))+
geom_col_interactive(aes(tooltip = mean_price, data_id = mean_price))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))
df_ev[!is.na(price)& !body_type == "", .(mean_price = mean(price)), .(make, body_type)] %>%
ggplot(aes(x=make, y=mean_price, fill = body_type))+
geom_col_interactive(aes(tooltip = mean_price, data_id = mean_price))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))+
scale_y_continuous(labels = comma)
df_ev[!is.na(price)& !body_type == "", .(mean_price = mean(price)), .(make, body_type)] %>%
ggplot(aes(x=make, y=mean_price, fill = body_type))+
geom_col_interactive(aes(tooltip = mean_price, data_id = mean_price))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))+
scale_y_continuous(labels = comma, breaks = seq(0, 600000, 100000))
df_ev[!is.na(price)& !body_type == "", .(mean_price = mean(price)), .(make, body_type)] %>%
ggplot(aes(x=make, y=mean_price, fill = body_type))+
geom_col_interactive(aes(tooltip = mean_price, data_id = mean_price))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))+
scale_y_continuous(labels = comma, breaks = seq(0, 600000, 100000))+
labs(x="Makes",y="Mean Price (AUD)", fill = "Body Types", title = "Stacked Mean Prices by body types and makes")
gg_col_price_body_make <- df_ev[!is.na(price)& !body_type == "", .(mean_price = mean(price)), .(make, body_type)] %>%
ggplot(aes(x=make, y=mean_price, fill = body_type))+
geom_col_interactive(aes(tooltip = mean_price, data_id = mean_price))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))+
scale_y_continuous(labels = comma, breaks = seq(0, 600000, 100000))+
labs(x="Makes",y="Mean Price (AUD)", fill = "Body Types", title = "Stacked Mean Prices by Body Types and Makes")
ggiraph(ggobj = gg_col_price_body_make)
df_ev[!is.na(price)& !body_type == "", .(mean_price = round(mean(price)), 2), .(make, body_type)]
df_ev[!is.na(price)& !body_type == "", .(mean_price = round(mean(price),2)), .(make, body_type)]
gg_col_price_body_make <- df_ev[!is.na(price)& !body_type == "", .(mean_price = round(mean(price),2)), .(make, body_type)] %>%
ggplot(aes(x=make, y=mean_price, fill = body_type))+
geom_col_interactive(aes(tooltip = mean_price, data_id = mean_price))+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5))+
scale_y_continuous(labels = comma, breaks = seq(0, 600000, 100000))+
labs(x="Makes",y="Mean Price (AUD)", fill = "Body Types", title = "Stacked Mean Prices by Body Types and Makes")
ggiraph(ggobj = gg_col_price_body_make)
df_ev[make == "Renault"]
library(dplyr)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, include = FALSE)
path <- "D:/My Storage/Career_R_ABS/cover letter/"
comp_detail <- readxl::read_xlsx(paste0(path,"Company details.xlsx"))
date <- Sys.Date() %>% format(., "%b %d %Y")
rownumber <- 35
manager_name <- comp_detail[rownumber,][,"HR_Name"] %>% unlist() %>% ifelse(is.na(.) == "TRUE","Hiring Manager", .)
company_name <- comp_detail[rownumber,][,"Company_Name"] %>% unlist() %>% ifelse(is.na(.) == "TRUE","No company name?", .)
company_address <- comp_detail[rownumber,][,"Address"] %>% unlist() %>% ifelse(is.na(.) == "TRUE","", .)
job_title <- comp_detail[rownumber,][,"job_title"] %>% unlist() %>% ifelse(is.na(.) == "TRUE","fault title !", .)
job_number <- comp_detail[rownumber,][,"job_number"] %>% unlist() %>% ifelse(is.na(.) == "TRUE","", .)
adv_from <- comp_detail[rownumber,][,"adv_from"] %>% unlist() %>% ifelse(is.na(.) == "TRUE","", .)
post_date <- comp_detail[rownumber,][,"post_date"] %>% pull(.) %>% as.Date(.) %>% format(., "%b %d %Y") %>% ifelse(is.na(.) =="TRUE","", . )
on_logi <- ifelse(is.na(post_date) == F, "on ", "")
# I am writing to apply for the position of `r paste(job_title)` at `r paste(company_name)`, which was advertised on `r paste(adv_from)` `r paste(on_logi,post_date)`.
# I am writing to apply for the position of `r paste(job_title)` at `r paste(company_name)`, which was introduced by my friend.
skills <- comp_detail[rownumber,][,"what_skills_requred"] %>% unlist()
# Need to add more details here, depends on the requirement of company.
skill_list <- readxl::read_xlsx(paste0(path,"My Skill list.xlsx"))
skill1 <- skill_list[1,1] # Data analysis & modelling
descrip1 <- skill_list[1,2]
skill2 <- skill_list[2,1] # Problem-Solving
descrip2 <- skill_list[2,2]
skill3 <- skill_list[3,1] # Quick learning
descrip3 <- skill_list[3,2]
skill4 <- skill_list[4,1] # Passion
descrip4 <- skill_list[4,2]
skill5 <- skill_list[5,1] # Communication/Leadership
descrip5 <- skill_list[5,2]
skill6 <- skill_list[6,1] # Attention to detail
descrip6 <- skill_list[6,2]
skill7 <- skill_list[7,1] # Technical written skills
descrip7 <- skill_list[7,2]
skill8 <- skill_list[8,1] # knowledge in generating process documentation
descrip8 <- skill_list[8,2]
skill9 <- skill_list[9,1] # Knowledge of programming languages
descrip9 <- skill_list[9,2]
skill_match <- comp_detail$Skills_match[rownumber]
company_research <- comp_detail$company_research[rownumber]
# `r paste(company_name)` `r paste(company_research)`
open_driver <- function(yes){
if(yes = TRUE){
verlist <- binman::list_versions("chromedriver") %>% flatten_chr()
version <- system2(command = "wmic",args = 'datafile where name="C:\\\\Program Files (x86)\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe" get Version /value',stdout = TRUE,stderr = TRUE)
version <- str_sub(version[3],start = 9,end = -2)
ver <- max(verlist[version > verlist])
driver <- rsDriver(browser = "chrome", chromever = ver)
print("Driver: redr is ready to use, try redr$open")
}
if(yes = FALSE){print("NO action take")}
}
open_driver <- function(yes){
if(yes = TRUE){
verlist <- binman::list_versions("chromedriver") %>% flatten_chr()
version <- system2(command = "wmic",args = 'datafile where name="C:\\\\Program Files (x86)\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe" get Version /value',stdout = TRUE,stderr = TRUE)
version <- str_sub(version[3],start = 9,end = -2)
ver <- max(verlist[version > verlist])
driver <- rsDriver(browser = "chrome", chromever = ver)
print("Driver: redr is ready to use, try redr$open")
}
if(yes = FALSE){print("NO action take")}
}
if(x = FALSE){print("NO action take")}
if(x = FALSE){print("NO action take")}
source('D:/Projects/Scrape functions/driver open.R')
source('D:/Projects/Scrape functions/driver open.R')
source('D:/Projects/Scrape functions/driver open.R')
open_driver <- function(x){
if(x = 1){
verlist <- binman::list_versions("chromedriver") %>% flatten_chr()
version <- system2(command = "wmic",args = 'datafile where name="C:\\\\Program Files (x86)\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe" get Version /value',stdout = TRUE,stderr = TRUE)
version <- str_sub(version[3],start = 9,end = -2)
ver <- max(verlist[version > verlist])
driver <- rsDriver(browser = "chrome", chromever = ver)
print("Driver: redr is ready to use, try redr$open")
}
if(x = 0){print("NO action take")}
}
library(binman)
open_driver <- function(x){
if(x = 1){
verlist <- list_versions("chromedriver") %>% flatten_chr()
version <- system2(command = "wmic",args = 'datafile where name="C:\\\\Program Files (x86)\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe" get Version /value',stdout = TRUE,stderr = TRUE)
version <- str_sub(version[3],start = 9,end = -2)
ver <- max(verlist[version > verlist])
driver <- rsDriver(browser = "chrome", chromever = ver)
print("Driver: redr is ready to use, try redr$open")
}
if(x = 0){print("NO action take")}
}
open_driver <- function(x){
if(x == 1){
verlist <- list_versions("chromedriver") %>% flatten_chr()
version <- system2(command = "wmic",args = 'datafile where name="C:\\\\Program Files (x86)\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe" get Version /value',stdout = TRUE,stderr = TRUE)
version <- str_sub(version[3],start = 9,end = -2)
ver <- max(verlist[version > verlist])
driver <- rsDriver(browser = "chrome", chromever = ver)
print("Driver: redr is ready to use, try redr$open")
}
if(x == 0){print("NO action take")}
}
open_driver <- function(x){
if(x == "yes"){
verlist <- list_versions("chromedriver") %>% flatten_chr()
version <- system2(command = "wmic",args = 'datafile where name="C:\\\\Program Files (x86)\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe" get Version /value',stdout = TRUE,stderr = TRUE)
version <- str_sub(version[3],start = 9,end = -2)
ver <- max(verlist[version > verlist])
driver <- rsDriver(browser = "chrome", chromever = ver)
print("Driver: redr is ready to use, try redr$open")
}
if(x == 'no'){print("NO action take")}
}
open_driver <- function(x){
if(x == "yes"){
verlist <- list_versions("chromedriver") %>% flatten_chr()
version <- system2(command = "wmic",args = 'datafile where name="C:\\\\Program Files (x86)\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe" get Version /value',stdout = TRUE,stderr = TRUE)
version <- str_sub(version[3],start = 9,end = -2)
ver <- max(verlist[version > verlist])
driver <- rsDriver(browser = "chrome", chromever = ver)
print("Driver: redr is ready to use, try redr$open")
}
if(x == 'no'){print("NO action take")}
}
open_driver <- function(x){
if(x == "yes"){
# Check the available chrome version, the default is latest
verlist <- list_versions("chromedriver") %>% flatten_chr()
# check my chrome version. wmic: WMI command-line
version <- system2(command = "wmic",args = 'datafile where name="C:\\\\Program Files (x86)\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe" get Version /value',stdout = TRUE,stderr = TRUE)
version <- str_sub(version[3],start = 9,end = -2)
# select the latest version earlier the current chrome version
ver <- max(verlist[version > verlist])
# driver setting
driver <- rsDriver(browser = "chrome", chromever = ver)
driver$client$close()
print("Driver: redr is ready to use, try redr$open")
}
if(x == 'no'){print("NO action take")}
}
source("D:/Projects/Scrape functions/driver open.R")
open_driver(yes)
open_driver("yes")
source("D:/Projects/Scrape functions/driver open.R")
open_driver("yes")
?flatten_chr
source("D:/Projects/Scrape functions/driver open.R")
open_driver("yes")
# to cleanup the port, by kill the java instance(s) inside Rstudio
# refer: https://github.com/ropensci/RSelenium/issues/228
system("taskkill /im java.exe /f", intern=FALSE, ignore.stdout=FALSE)
# check if ports still open
pingr::ping_port("localhost", 4567)
source("D:/Projects/Scrape functions/driver open.R")
open_driver("yes")
redr$close()
print("Driver: redr is ready to use, sign a value with driver[['client']]")
# to cleanup the port, by kill the java instance(s) inside Rstudio
# refer: https://github.com/ropensci/RSelenium/issues/228
system("taskkill /im java.exe /f", intern=FALSE, ignore.stdout=FALSE)
# check if ports still open
pingr::ping_port("localhost", 4567)
source("D:/Projects/Scrape functions/driver open.R")
open_driver("yes")
redr <- driver[['client']]
# to cleanup the port, by kill the java instance(s) inside Rstudio
# refer: https://github.com/ropensci/RSelenium/issues/228
system("taskkill /im java.exe /f", intern=FALSE, ignore.stdout=FALSE)
# check if ports still open
pingr::ping_port("localhost", 4567)
source("D:/Projects/Scrape functions/driver open.R")
open_driver("yes")
redr$open()
redr$close()
open_driver
source("D:/Projects/Scrape functions/driver kill.R")
driver_kill("yes")
open_driver("yes")
?print0
